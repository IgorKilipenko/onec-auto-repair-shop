#Область ПрограммныйИнтерфейс

// Параметры:
//  объект - Структура, ФиксированнаяСтруктура
//  списокКлючей - Массив, ФиксированныйМассив, Строка, Структура, ФиксированнаяСтруктура
// Возвращаемое значение:
//  - Булево
Функция СтруктураСодержитКлючи(Знач объект, Знач списокКлючей) Экспорт
    ДиагностикаКлиентСервер.Утверждение(ПроверкаТиповКлиентСервер.ЭтоСтруктура(объект, Ложь),
        "Аргумент ""Объект"" должен иметь тип значения: ""Структура"" | ""ФиксированнаяСтруктура"" | ""Строка"".");

    Если ТипЗнч(списокКлючей) = Тип("Строка") Тогда
        списокКлючей = Новый ФиксированныйМассив(СтрРазделить(списокКлючей, ",", Ложь));
    ИначеЕсли ПроверкаТиповКлиентСервер.ЭтоСтруктура(списокКлючей, Ложь) Тогда
        списокКлючей = Новый ФиксированныйМассив(ПолучитьКлючиСтруктуры(списокКлючей));
    КонецЕсли;

    Для Каждого имяСвойства Из списокКлючей Цикл
        Если НЕ объект.Свойство(имяСвойства) Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла;

    Возврат объект.Количество() > 0 И списокКлючей.Количество() > 0;
КонецФункции

// Параметры:
//  объект - Структура, ФиксированнаяСтруктура
// Возвращаемое значение:
//  - Массив
Функция ПолучитьКлючиСтруктуры(Знач объект) Экспорт
    ДиагностикаКлиентСервер.Утверждение(ПроверкаТиповКлиентСервер.ЭтоСтруктура(объект, Ложь),
        "Аргумент ""Объект"" должен иметь тип значения: ""Структура"" | ""ФиксированнаяСтруктура"".");

    результат = Новый Массив(объект.Количество());
    сч = 0;
    Для Каждого элемент Из объект Цикл
        результат.Вставить(сч, элемент.Ключ);
        сч = сч + 1;
    КонецЦикла;

    Возврат результат;
КонецФункции

// Параметры:
//  объект - Структура, ФиксированнаяСтруктура
// Возвращаемое значение:
//  - Массив
Функция ПолучитьЗначенияСтруктуры(Знач объект) Экспорт
    ДиагностикаКлиентСервер.Утверждение(ПроверкаТиповКлиентСервер.ЭтоСтруктура(объект, Ложь),
        "Аргумент ""Объект"" должен иметь тип значения: ""Структура"" | ""ФиксированнаяСтруктура"".");

    результат = Новый Массив(объект.Количество());
    сч = 0;
    Для Каждого элемент Из объект Цикл
        результат.Вставить(сч, элемент.Значение);
        сч = сч + 1;
    КонецЦикла;

    Возврат результат;
КонецФункции

// Возвращает значение для указанного `ключа` если ключ существует в структуре,
//  иначе - если `вставитьКлюч` = Истина вставляет указанный `ключ` со значением `поУмолчанию`.
//  и возвращает значение `поУмолчанию`.
// Параметры:
//  объект - Структура, ФиксированнаяСтруктура
//  ключ - Строка
//  поУмолчанию - Произвольный - Указанное значение будет возвращено если ключ отсутствует в структуре
//  вставитьКлюч - Булево - Если Истина то в случае отсутствия ключ будет вставлен в структуру (только для типа `объекта` - `Структура`)
// Возвращаемое значение:
//  - Произвольный, Неопределено
Функция ПолучитьЗначениеСтруктуры(Знач объект, Знач ключ, Знач поУмолчанию = Неопределено, Знач вставитьКлюч = Ложь) Экспорт
    результат = Неопределено;
    ключСуществует = объект.Свойство(ключ, результат);

    Если ключСуществует = Ложь Тогда
        результат = поУмолчанию;
        Если вставитьКлюч Тогда
            объект.Вставить(ключ, результат);
        КонецЕсли;
    КонецЕсли;

    Возврат результат;
КонецФункции

// Параметры:
//  объект - Структура, ФиксированнаяСтруктура
// Возвращаемое значение:
//  Структура
Функция КопироватьСтруктуру(Знач объект) Экспорт
    ДиагностикаКлиентСервер.Утверждение(ПроверкаТиповКлиентСервер.ЭтоСтруктура(объект, Ложь),
        "Аргумент ""Объект"" должен иметь тип значения: ""Структура"" | ""ФиксированнаяСтруктура"".");

    результат = Новый Структура;

    Для Каждого элементСтруктуры Из объект Цикл
        результат.Вставить(элементСтруктуры.Ключ, элементСтруктуры.Значение);
    КонецЦикла;

    Возврат результат;
КонецФункции

// Устарела. Не используется (не тестировалось)
// Возвращает значение для указанного `ключа` если ключ существует в соответствии,
//  иначе - если `вставитьКлюч` = Истина вставляет указанный `ключ` со значением `значение`.
//  и возвращает значение по умолчанию.
// Параметры:
//  объект - Соответствие, ФиксированноеСоответствие
//  ключ - Произвольный
//  значение - Произвольный - Указанное значение будет возвращено если ключ отсутствует
//  вставитьКлюч - Булево - Если Истина то в случае отсутствия ключ будет добавлен (только для типа `объекта` - `Соответствие`)
// Возвращаемое значение:
//  - Произвольный, Неопределено
Функция ПолучитьЗначениеСоответствия(Знач объект, Знач ключ, Знач значение = Неопределено, Знач вставитьКлюч = Ложь) Экспорт
    результат = объект.Получить(ключ);

    Если результат <> Неопределено Тогда
        результат = значение;
        Если вставитьКлюч Тогда
            объект.Вставить(ключ, результат);
        КонецЕсли;
    КонецЕсли;

    Возврат результат;
КонецФункции

// Проверяет наличие ключа
// Параметры:
//  объект - Соответствие, ФиксированноеСоответствие
//  ключ - Произвольный
//  добавить - Булево - Если Истина то в случае отсутствия ключ будет добавлен (только для типа `объекта` - `Соответствие`)
//  значение - Произвольный - Указанное значение будет возвращено если ключ отсутствует
// Возвращаемое значение:
//  - Структура
//      * Содержит - Булево
//      * Значение - Произвольный
Функция СоответствиеСодержит(Знач объект, Знач ключ, Знач добавить = Ложь, Знач значение = Неопределено) Экспорт
    результат = Новый Структура("Содержит, Значение", Истина);

    результат.Значение = объект.Получить(ключ);
    Если результат.Значение <> Неопределено Тогда
        Возврат результат;
    КонецЕсли;

    количествоЭлементов = объект.Количество();
    объект.Вставить(ключ, ?(добавить, значение, результат.Значение));
    Если количествоЭлементов <> объект.Количество() Тогда
        результат.Содержит = Ложь;
        Если добавить = Ложь Тогда
            объект.Удалить(ключ);
        КонецЕсли;
    КонецЕсли;

    Возврат результат;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
