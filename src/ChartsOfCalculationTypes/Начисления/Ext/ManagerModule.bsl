#Область ПрограммныйИнтерфейс

// Возвращает стандартные (определены на уровне конфигурации) виды расчета начислений.
//  В случае отсутствия в ИБ данных вызывает исключение.
// Возвращаемое значение:
//  - ФиксированнаяСтруктура
Функция ПолучитьСтандартныеВидыРасчета() Экспорт
    предопределенныеВидыРасчетов = РаботаСМетаданными.ПолучитьЗначенияПредопределенных(Тип("ПланВидовРасчетаСсылка.Начисления"));
    ДиагностикаКлиентСервер.Утверждение(ПроверкаТиповКлиентСервер.ЭтоФиксированнаяСтруктура(предопределенныеВидыРасчетов));

    результатПроверки = ПроверитьНаличиеСтандартныхВидовРасчета(предопределенныеВидыРасчетов);
    Если результатПроверки.Успех = Ложь Тогда
        Для Каждого сообщение Из результатПроверки.СообщенияОбОшибках Цикл
            сообщение.Сообщить();
        КонецЦикла;

        ВызватьИсключение("Ошибка получения стандартных видов расчета начислений.");
    КонецЕсли;

    Возврат предопределенныеВидыРасчетов;
КонецФункции

// Возвращает наименования стандартных (определены на уровне конфигурации) виды расчета начислений.
// Возвращаемое значение:
//  - ФиксированныйМассив
Функция ПолучитьНаименованияСтандартныхВидовРасчета() Экспорт
    результат = Новый Массив;
    результат.Добавить("Оклад");
    результат.Добавить("Больничный");

    Возврат Новый ФиксированныйМассив(результат);
КонецФункции

// Параметры:
//  видРасчетаСсылка - ПланВидовРасчетаСсылка
// Возвращаемое значение:
//  - Булево
Функция ЭтоСтандартныйВидРасчета(Знач видРасчетаСсылка) Экспорт
    стандартныеВидыРасчета = ПолучитьСтандартныеВидыРасчета();

    Для Каждого элементКЗ Из стандартныеВидыРасчета Цикл
        Если видРасчетаСсылка = элементКЗ.Значение Тогда
            Возврат Истина;
        КонецЕсли;
    КонецЦикла;

    Возврат Ложь;
КонецФункции

// Параметры:
//  видРасчетаСсылка - ПланВидовРасчетаСсылка.Начисления
// Возвращаемое значение:
//  - СправочникСсылка.СтатьиЗатрат, Неопределено
Функция ПолучитьСтатьюЗатратВидаРасчета(Знач видРасчетаСсылка) Экспорт
    имяРеквизита = "СтатьяЗатрат";
    результат = РаботаСРеквизитами.ЗначенияРеквизитовОбъекта(видРасчетаСсылка, имяРеквизита);
    ДиагностикаКлиентСервер.Утверждение(результат.Свойство(имяРеквизита),
        "Вид расчета должен содержать реквизит ""СтатьяЗатрат"".");

    Возврат результат[имяРеквизита];
КонецФункции

// Параметры:
//  списокВидовРасчета - Массив, ФиксированныйМассив из ПланВидовРасчетаСсылка.Начисления
// Возвращаемое значение:
//  ТаблицаЗначений
//      * ВидРасчета - ПланВидовРасчетаСсылка.Начисления
//      * СтатьяЗатрат - СправочникСсылка.СтатьиЗатрат, Неопределено
Функция ПолучитьСтатьиЗатратСпискаВидовРасчета(Знач списокВидовРасчета) Экспорт
    запрос = Новый Запрос;
    запрос.УстановитьПараметр("СписокВидовРасчета", списокВидовРасчета);
    запрос.Текст =
        "ВЫБРАТЬ
        |   ПланВидовРасчетаНачисления.Ссылка КАК ВидРасчета,
        |   ПланВидовРасчетаНачисления.СтатьяЗатрат КАК СтатьяЗатрат
        |ИЗ
        |   ПланВидовРасчета.Начисления КАК ПланВидовРасчетаНачисления
        |ГДЕ
        |   ПланВидовРасчетаНачисления.Ссылка В (&СписокВидовРасчета)
        |";

    Возврат запрос.Выполнить().Выгрузить();
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  стандартныеВидыРасчетов - Структура, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СообщенияОбОшибках - Массив из СообщениеПользователю
Функция ПроверитьНаличиеСтандартныхВидовРасчета(Знач стандартныеВидыРасчетов = Неопределено) Экспорт
    результат = Новый Структура("Успех, СообщенияОбОшибках", Истина);

    списокИменВидовРасчетов = Новый Массив(ПолучитьНаименованияСтандартныхВидовРасчета());
    стандартныеВидыРасчетов = ?(стандартныеВидыРасчетов = Неопределено,
            РаботаСМетаданными.ПолучитьЗначенияПредопределенных(Тип("ПланВидовРасчетаСсылка.Начисления")),
            стандартныеВидыРасчетов);
    сообщенияОбОшибках = Новый Массив;
    Для Каждого имяВидаРасчета Из списокИменВидовРасчетов Цикл
        Если стандартныеВидыРасчетов.Свойство(имяВидаРасчета) = Ложь Тогда
            результат.Успех = Ложь;

            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = СтрШаблон("В ИБ отсутствует обязательный стандартный вид расчета: ""%1"".", имяВидаРасчета);
            сообщенияОбОшибках.Добавить(сообщение);
        КонецЕсли;
    КонецЦикла;

    ДиагностикаКлиентСервер.Утверждение(результат.Успех ИЛИ сообщенияОбОшибках.Количество() > 0);
    Если результат.Успех = Ложь Тогда
        результат.СообщенияОбОшибках = сообщенияОбОшибках;
    КонецЕсли;

    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
