#Область ОписаниеПеременных

&НаКлиенте
Перем _ПоляТиповФормы;

#КонецОбласти // ОписанияПеременных

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(_, __)
    инициализацияНаСервере();
КонецПроцедуры

// Обработчик события формы ПриОткрытии
// Параметры:
// _ - ЭлементФормы - не используется в текущей реализации
&НаКлиенте
Процедура ПриОткрытии(_)
    инициализацияПолейТиповФормы();
    настройкаВидаФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(отказ, __)
    Если этоКлиент() Тогда
        очиститьПоляПоставщика();
    ИначеЕсли этоПоставщик() Тогда
        очиститьПоляКлиента();
        Если Объект.Договор.Пустая() Тогда
            ПоказатьПредупреждение( ,
                "Для контрагента типа - ""Поставщик"" необходимо заполнить поле ""Договор"".");
        КонецЕсли;
    Иначе
        ДиагностикаКлиентСервер.Утверждение(Ложь, "Недопустимое значение типа контрагента.");
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Обработчик события поля формы ПриИзменении / для поля ТипКонтрагента
// Параметры:
// _ - ЭлементФормы - не используется в текущей реализации
&НаКлиенте
Процедура ТипКонтрагентаПриИзменении(_)
    настройкаВидаФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область СлужебныеПроцедурыИФункции

#Область Инициализация
&НаСервере
Процедура инициализацияНаСервере()
    ЭтотОбъект._Состояние = Новый Структура;
    ЭтотОбъект._Состояние.Вставить("ТипыКонтрагентов",
        РаботаСМетаданными.ПолучитьЗначенияПеречисления(Тип("ПеречислениеСсылка.ТипыКонтрагентов")));
    ЭтотОбъект._Состояние.Вставить("ЗаголовокПоляНаименованиеПоУмолчанию", Элементы.Наименование.Заголовок);
КонецПроцедуры

&НаКлиенте
Процедура инициализацияПолейТиповФормы()
    _ПоляТиповФормы = Новый Структура("ПоляТолькоДляКлиента, ПоляТолькоДляПоставщика");

    // Инициализация полей доступных только для контрагента типа - Покупатель
    поляТолькоДляКлиента = Новый Массив;
    поляТолькоДляКлиента.Добавить(ЭтотОбъект.Элементы.ПолКлиента);
    поляТолькоДляКлиента.Добавить(ЭтотОбъект.Элементы.ДатаРожденияКлиента);
    поляТолькоДляКлиента.Добавить(ЭтотОбъект.Элементы.Источник);
    _ПоляТиповФормы.ПоляТолькоДляКлиента = Новый ФиксированныйМассив(поляТолькоДляКлиента);

    // Инициализация полей доступных только для контрагента типа - Поставщик
    поляТолькоДляПоставщика = Новый Массив;
    поляТолькоДляПоставщика.Добавить(ЭтотОбъект.Элементы.Договор);
    _ПоляТиповФормы.ПоляТолькоДляПоставщика = Новый ФиксированныйМассив(поляТолькоДляПоставщика);

    _ПоляТиповФормы = Новый ФиксированнаяСтруктура(_ПоляТиповФормы);
КонецПроцедуры

#КонецОбласти // Инициализация

#Область НастройкиОтображенияФормы
// Выполняет настройку полей формы в соответствии
// с выбранным значением Типа Контрагента / Клиент или Поставщик
&НаКлиенте
Процедура настройкаВидаФормы()
    этоКлиент_ = этоКлиент();
    настроитьВидФормыДляКлиента(этоКлиент_);

    этоПоставщик_ = ?(этоКлиент_, Ложь, этоПоставщик());
    настроитьВидФормыДляПоставщика(этоПоставщик_);
КонецПроцедуры

// Параметры:
// 	этоКлиент - Булево
&НаКлиенте
Процедура настроитьВидФормыДляКлиента(Знач этоКлиент)
    Для Каждого полеФормы Из _ПоляТиповФормы.ПоляТолькоДляКлиента Цикл
        полеФормы.Видимость = этоКлиент;
    КонецЦикла;

    Если этоКлиент Тогда
        Элементы.Наименование.Заголовок = "ФИО";
    КонецЕсли;
КонецПроцедуры

// Параметры:
// 	этоПоставщик - Булево
&НаКлиенте
Процедура настроитьВидФормыДляПоставщика(Знач этоПоставщик)
    Для Каждого полеФормы Из _ПоляТиповФормы.ПоляТолькоДляПоставщика Цикл
        полеФормы.Видимость = этоПоставщик;
    КонецЦикла;

    Если этоПоставщик Тогда
        Элементы.Наименование.Заголовок = ЭтотОбъект._Состояние.ЗаголовокПоляНаименованиеПоУмолчанию;
    КонецЕсли;

    Элементы.Договор.АвтоОтметкаНезаполненного = ?(этоПоставщик, Истина, Ложь);
КонецПроцедуры

// Параметры:
//  коллекцияПолейФормы - КоллекцияПолейФормы - коллекция объектов полей формы
&НаКлиенте
Процедура очиститьПоля(коллекцияПолейФормы)
    Для Каждого поле Из коллекцияПолейФормы Цикл
        Если (ТипЗнч(поле) = Тип("ТаблицаФормы")) И (ТипЗнч(Объект[поле.Имя]) =
                Тип("ДанныеФормыКоллекция")) Тогда
            Объект[поле.Имя].Очистить();
        Иначе
            Объект[поле.Имя] = Неопределено;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

// Выполняет очистку полей формы используемых только для Поставщика
&НаКлиенте
Процедура очиститьПоляПоставщика()
    очиститьПоля(_ПоляТиповФормы.ПоляТолькоДляПоставщика);
КонецПроцедуры

// Выполняет очистку полей формы используемых только для Клиента
&НаКлиенте
Процедура очиститьПоляКлиента()
    очиститьПоля(_ПоляТиповФормы.ПоляТолькоДляКлиента);
КонецПроцедуры
#КонецОбласти // НастройкиОтображенияФормы

#Область ПриватныеСвойства
// Возвращаемое значение:
// 	Булево - Истина, если текущий элемент это Клиент
&НаКлиенте
Функция этоКлиент()
    Возврат Объект.ТипКонтрагента = ЭтотОбъект._Состояние.ТипыКонтрагентов.Покупатель;
КонецФункции

// Возвращаемое значение:
// 	Булево - Истина, если текущий элемент это Поставщик
&НаКлиенте
Функция этоПоставщик()
    Возврат Объект.ТипКонтрагента = ЭтотОбъект._Состояние.ТипыКонтрагентов.Поставщик;
КонецФункции
#КонецОбласти // ПриватныеСвойства

#Область Утилиты
// Получить значение типа контрагента
// Параметры:
//	имяТипаКонтрагента - Строка - строковое значение из Перечисления.ТипыКонтрагентов
// Возвращаемое значение:
// 	Перечисления.ТипыКонтрагентов.ТипКонтрагента
&НаКлиенте
Функция получитьЗначениеТипаКонтрагента(Знач имяТипаКонтрагента)
    Возврат получитьПредопределенныйЭлемент(СтрШаблон("Перечисление.ТипыКонтрагентов.%1", имяТипаКонтрагента));
КонецФункции

// Получить значение реквизита Справочника Контрагенты
// Параметры:
//	имяПредопределенного - Строка - имя реквизита Справочника Контрагенты
// Возвращаемое значение:
// 	Любой
&НаКлиенте
Функция получитьПредопределенныйЭлементКонтрагента(Знач имяПредопределенного)
    Возврат получитьПредопределенныйЭлемент(СтрШаблон("Справочник.Контрагенты.%1", имяПредопределенного));
КонецФункции

// Получить предопределенный элемент метаданных. \
// [прим. разработчика] - нужно вынести в общий модуль
//
// Параметры:
//  полныйПуть - Строка - полный путь к объекту метаданных
//
// Возвращаемое значение:
//  Любой - объект метаданных или Неопределено
&НаКлиенте
Функция получитьПредопределенныйЭлемент(Знач полныйПуть)
    Попытка
        Возврат ПредопределенноеЗначение(полныйПуть);
    Исключение
        Возврат Неопределено;
    КонецПопытки;
КонецФункции
#КонецОбласти // Утилиты

#КонецОбласти // СлужебныеПроцедурыИФункции
