#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(отказ, проверяемыеРеквизиты)
    Если проверитьЗаполнениеРодителя() = Ложь Тогда
        отказ = Истина;
        Возврат;

    Иначе // Проверка соответствия типа группе номенклатуры
        группаНоменклатуры = Справочники.Номенклатура.ПолучитьТипНоменклатурыПоГруппе(ЭтотОбъект.Родитель);
        Если группаНоменклатуры <> ЭтотОбъект.ТипНоменклатуры Тогда
            имяРеквизитаТипНоменклатуры = "ТипНоменклатуры";

            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = "Указанный тип номенклатуры не соответствует группе номенклатуры.";
            сообщение.Поле = имяРеквизитаТипНоменклатуры;
            сообщение.УстановитьДанные(ЭтотОбъект);
            сообщение.Сообщить();

            отказ = Истина;
            Возврат;
        КонецЕсли;
    КонецЕсли;

    результатПроверки = проверитьЗаполнениеСтатьиЗатрат();
    Если результатПроверки.Успех = Ложь Тогда
        отказ = Истина;
        Возврат;
    КонецЕсли;

    результатПроверки = проверитьЗаполнениеСчетаБухгалтерии();
    Если результатПроверки.Успех = Ложь Тогда
        отказ = Истина;
        Возврат;
    КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(_)
    Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
        ЭтотОбъект.ДлительностьУслуги = 0;
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  - Булево - Истина если проверка выполнена успешно, иначе Ложь
Функция проверитьЗаполнениеРодителя()
    Если ЗначениеЗаполнено(ЭтотОбъект.Родитель) = Ложь Тогда
        имяРеквизита = "Родитель";
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст = СтрШаблон("Поле ""%1"" должно быть заполнено заполнено.", имяРеквизита);
        сообщение.Поле = имяРеквизита;
        сообщение.УстановитьДанные(ЭтотОбъект);
        сообщение.Сообщить();

        Возврат Ложь;
    КонецЕсли;

    Возврат Истина;
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ИмяРеквизита - Строка - Имя проверенного реквизита
Функция проверитьЗаполнениеСтатьиЗатрат()
    Возврат проверитьЗаполнениеПоляЗатратТипаНоменклатуры(ЭтотОбъект.Метаданные().Реквизиты.СтатьяЗатрат.Имя);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ИмяРеквизита - Строка - Имя проверенного реквизита
Функция проверитьЗаполнениеСчетаБухгалтерии()
    Возврат проверитьЗаполнениеПоляЗатратТипаНоменклатуры(ЭтотОбъект.Метаданные().Реквизиты.СчетБухгалтерскогоУчета.Имя);
КонецФункции

// Параметры:
//  имяРеквизитаЗатрат - Строка
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ИмяРеквизита - Строка - Имя проверенного реквизита
Функция проверитьЗаполнениеПоляЗатратТипаНоменклатуры(Знач имяРеквизитаЗатрат)
    результат = Новый Структура("Успех, ИмяРеквизита", Истина, имяРеквизитаЗатрат);

    Если ЭтотОбъект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
        ИЛИ ЭтотОбъект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Материал
        ИЛИ ЭтотОбъект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда

        Если ЗначениеЗаполнено(ЭтотОбъект[результат.ИмяРеквизита]) = Ложь Тогда
            сообщение = Новый СообщениеПользователю;
            сообщение.Текст = СтрШаблон("Для номенклатуры типа: ""%1"" необходимо заполнить поле ""%2"".",
                    Строка(ЭтотОбъект.ТипНоменклатуры), результат.ИмяРеквизита);
            сообщение.Поле = результат.ИмяРеквизита;
            сообщение.УстановитьДанные(ЭтотОбъект);
            сообщение.Сообщить();

            результат.Успех = Ложь;
            Возврат результат;
        КонецЕсли;
    КонецЕсли;

    Возврат результат;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
