#Область ПрограммныйИнтерфейс

// Устарела.
Функция ЗаполнитьДвижениеРасчетыСПерсоналом(Знач движение, Знач дата, Знач структураНачисления, Знач содержание) Экспорт
    движение.СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаПродажу;
    движение.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
    движение.Период = дата;
    движение.Сумма = структураНачисления.Сумма;
    движение.Содержание = содержание;
    заполнитьСубконтоПоСчету(движение.СчетДт, движение.СубконтоДт, структураНачисления.СтатьяЗатрат);
    заполнитьСубконтоПоСчету(движение.СчетКт, движение.СубконтоКт, структураНачисления.Сотрудник);

    Возврат движение;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для учета поступления услуг
// Параметры:
//  дата - Дата - Дата записи
//  наборЗаписей - РегистрБухгалтерииНаборЗаписей.Хозрасчетный - Набор записей
//  строкаУслуг - Структура, ФиксированнаяСтруктура
//      * Сумма - Число
//      * СчетБухгалтерскогоУчета - ПланСчетовСсылка.Хозрасчетный
//      * СтатьяЗатрат - СправочникСсылка.СтатьиЗатрат - отражается в субконто дебета
//  поставщик - СправочникСсылка.Контрагенты - отражается в субконто кредита
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись - Заполненная запись
Функция ДобавитьЗаписьПоступлениеУслуг(Знач дата, Знач наборЗаписей, Знач строкаУслуг, Знач поставщик) Экспорт
    записьБУ = наборЗаписей.Добавить();
    записьБУ.СчетДт = строкаУслуг.СчетБухгалтерскогоУчета;
    записьБУ.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
    записьБУ.Период = дата;
    записьБУ.Сумма = строкаУслуг.Сумма;
    записьБУ.Содержание = ПолучитьСодержаниеДляПоступленияУслуг();
    заполнитьСубконтоПоСчету(записьБУ.СчетДт, записьБУ.СубконтоДт, строкаУслуг.СтатьяЗатрат);
    заполнитьСубконтоПоСчету(записьБУ.СчетКт, записьБУ.СубконтоКт, поставщик);

    Возврат записьБУ;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для учета поступления товаров и материалов
// Параметры:
//  дата - Дата - Дата записи
//  наборЗаписей - РегистрБухгалтерииНаборЗаписей.Хозрасчетный - Набор записей
//  строкаТоваров - Структура, ФиксированнаяСтруктура, СтрокаТаблицыЗначений
//      * Сумма - Число
//      * СчетБухгалтерскогоУчета - ПланСчетовСсылка.Хозрасчетный
//      * Номенклатура - СправочникСсылка.Номенклатура - отражается в субконто дебета
//  поставщик - СправочникСсылка.Контрагенты - отражается в субконто кредита
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись - Заполненная запись
Функция ДобавитьЗаписьПоступлениеТМЦ(Знач дата, Знач наборЗаписей, Знач строкаТоваров, Знач поставщик) Экспорт
    записьБУ = наборЗаписей.Добавить();
    записьБУ.СчетДт = строкаТоваров.СчетБухгалтерскогоУчета;
    записьБУ.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
    записьБУ.Период = дата;
    записьБУ.Сумма = строкаТоваров.Сумма;
    записьБУ.Содержание = "Отражено поступление товарно-материальных ценностей от поставщика";
    заполнитьСубконтоПоСчету(записьБУ.СчетДт, записьБУ.СубконтоДт, строкаТоваров.Номенклатура);
    заполнитьСубконтоПоСчету(записьБУ.СчетКт, записьБУ.СубконтоКт, поставщик);

    Возврат записьБУ;
КонецФункции

// Возвращаемое значение:
//  - Строка - Содержание по умолчанию для поступления услуг
Функция ПолучитьСодержаниеДляПоступленияУслуг() Экспорт
    Возврат "Отражено поступление услуг от поставщика";
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#Область ПомощникиПроводок
// Параметры:
//  счет - ПланСчетовСсылка.Хозрасчетный
// Возвращаемое значение:
//  - ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные
Функция получитьВидСубконтоПоСчету(Знач счет)
    видыСубконто = счет.ВидыСубконто;

    Если видыСубконто.Количество() = 0 Тогда
        Возврат Неопределено;
    КонецЕсли;

    Возврат видыСубконто[0].ВидСубконто;
КонецФункции

// Параметры:
//  счет - ПланСчетовСсылка.Хозрасчетный
//  субконто - РегистрБухгалтерииСубконто
//  значение - СправочникСсылка
// Возвращаемое значение:
//  - Булево
Функция заполнитьСубконтоПоСчету(Знач счет, субконто, Знач значение) Экспорт
    видСубконто = получитьВидСубконтоПоСчету(счет);
    Если видСубконто = Неопределено Тогда
        Возврат Ложь;
    КонецЕсли;

    субконто[видСубконто] = значение;
    Возврат Истина;
КонецФункции
#КонецОбласти // ПомощникиПроводок

#КонецОбласти // СлужебныеПроцедурыИФункции
