#Область ПрограммныйИнтерфейс

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для учета поступления услуг.
//  * Счет дебета: Устанавливается из аргумента `строкаУслуг.СчетБухгалтерскогоУчета`
//  * Счет кредита: `ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками`
// Параметры:
//  дата - Дата - Дата записи
//  строкаУслуг - Структура, ФиксированнаяСтруктура
//      * СчетБухгалтерскогоУчета - ПланСчетовСсылка.Хозрасчетный - Счет дебита
//      * СтатьяЗатрат - СправочникСсылка.СтатьиЗатрат - Отражается в субконто дебета
//      * Сумма - Число
//  поставщик - СправочникСсылка.Контрагенты - отражается в субконто кредита
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись - Заполненная запись
Функция ДобавитьЗаписьПоступлениеУслуг(Знач дата, Знач строкаУслуг, Знач поставщик) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = строкаУслуг.СчетБухгалтерскогоУчета;
    новаяЗапись.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
    новаяЗапись.Сумма = строкаУслуг.Сумма;
    новаяЗапись.Содержание = "Отражено поступление услуг от поставщика";

    // Заполнение субконто дебета
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетДт, новаяЗапись.СубконтоДт, строкаУслуг.СтатьяЗатрат);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    // Заполнение субконто кредита
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетКт, новаяЗапись.СубконтоКт, поставщик);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для учета поступления товаров и материалов
//  * Счет дебета: - Устанавливается из аргумента `строкаТоваров.СчетБухгалтерскогоУчета`
//  * Счет кредита: `ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками`
// Параметры:
//  дата - Дата - Дата записи
//  строкаТоваров - Структура, ФиксированнаяСтруктура, СтрокаТаблицыЗначений
//      * Номенклатура - СправочникСсылка.Номенклатура - отражается в субконто дебета
//      * СчетБухгалтерскогоУчета - ПланСчетовСсылка.Хозрасчетный - Счет дебета
//      * Сумма - Число
//  поставщик - СправочникСсылка.Контрагенты - отражается в субконто кредита
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись - Заполненная запись
Функция ДобавитьЗаписьПоступлениеТМЦ(Знач дата, Знач строкаТоваров, Знач поставщик) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = строкаТоваров.СчетБухгалтерскогоУчета;
    новаяЗапись.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
    новаяЗапись.Сумма = строкаТоваров.Сумма;
    новаяЗапись.Содержание = "Отражено поступление товарно-материальных ценностей от поставщика";

    // Заполнение субконто дебета
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетДт, новаяЗапись.СубконтоДт, строкаТоваров.Номенклатура);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    // Заполнение субконто кредита
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетКт, новаяЗапись.СубконтоКт, поставщик);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для отражения себестоимости товаров и материалов.
//  * Счет дебета: `ПланыСчетов.Хозрасчетный.Продажи`
//  * Счет кредита: Устанавливается из аргумента `структураСписания.СчетКредита`
// Параметры:
//  дата - Дата - Дата записи
//  структураСписания - Структура, ФиксированнаяСтруктура, СтрокаТаблицыЗначений
//      * Номенклатура - СправочникСсылка.Номенклатура - отражается в субконто кредита
//      * СчетКредита - ПланСчетовСсылка.Хозрасчетный - Счет кредита, `10` для материалов, `41` для товаров
//      * Сумма - Число - Сумма списания
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись - Заполненная запись
Функция ДобавитьЗаписьСписанияСебестоимостиТМЦ(Знач дата, Знач структураСписания) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
    новаяЗапись.СчетКт = структураСписания.СчетКредита;
    новаяЗапись.Сумма = структураСписания.Сумма;
    новаяЗапись.Содержание = "Списана себестоимость товарно-материальных ценностей";

    // Заполнение субконто кредита
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетКт, новаяЗапись.СубконтоКт, структураСписания.Номенклатура);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для отражения выручки от реализации товаров и материалов
//  * Счет дебета: `ПланыСчетов.Хозрасчетный.РасчетыСПокупателями`
//  * Счет кредита: `ПланыСчетов.Хозрасчетный.Продажи`
// Параметры:
//  дата - Дата - Дата записи
//  структураПродаж - Структура, ФиксированнаяСтруктура, СтрокаТаблицыЗначений
//      * Клиент - СправочникСсылка.Контрагенты - отражается в субконто дебета
//      * Сумма - Число - Стоимость продаж номенклатуры документа
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись - Заполненная запись
Функция ДобавитьЗаписьОтраженияВыручкиОтРеализацииТМЦ(Знач дата, Знач структураПродаж) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
    новаяЗапись.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
    новаяЗапись.Сумма = структураПродаж.Сумма;
    новаяЗапись.Содержание = "Отражена выручка от реализации товаров и услуг";

    // Заполнение субконто дебета
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетДт, новаяЗапись.СубконтоДт, структураПродаж.Клиент);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для отражения поступления денег в кассу
//  * Счет дебета: `ПланыСчетов.Хозрасчетный.Касса`
//  * Счет кредита: Устанавливается из аргумента `аналитикаПроводки.СчетКредита`
// Параметры:
//  дата - Дата - Дата записи
//  аналитикаПроводки - Структура, ФиксированнаяСтруктура
//      * СчетКредита - ПланСчетовСсылка.Хозрасчетный - [`РасчетыСПокупателями`, `РасчетыСПоставщиками`, `РасчетыСПодотчетнымиЛицами`]
//      * СубконтоДебет - СправочникСсылка.Кассы
//      * СубконтоКредит - СправочникСсылка.Контрагенты, СправочникСсылка.Сотрудники
//      * СодержаниеОперации - Строка
//      * Сумма - Число
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись.Хозрасчетный - Заполненная запись
Функция ДобавитьЗаписьПоступлениеДенегВКассу(Знач дата, Знач аналитикаПроводки) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = ПланыСчетов.Хозрасчетный.Касса;
    новаяЗапись.СчетКт = аналитикаПроводки.СчетКредита;
    новаяЗапись.Сумма = аналитикаПроводки.Сумма;
    новаяЗапись.Содержание = аналитикаПроводки.СодержаниеОперации;

    // Заполнение субконто дебета
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетДт, новаяЗапись.СубконтоДт, аналитикаПроводки.СубконтоДебет);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    // Заполнение субконто кредита
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетКт, новаяЗапись.СубконтоКт, аналитикаПроводки.СубконтоКредит);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для отражения расход денег из кассы
//  * Счет дебета: Устанавливается из аргумента `аналитикаПроводки.СчетДебета`
//  * Счет кредита: `ПланыСчетов.Хозрасчетный.Касса`
// Параметры:
//  дата - Дата - Дата записи
//  аналитикаПроводки - Структура, ФиксированнаяСтруктура
//      * СчетДебета - ПланСчетовСсылка.Хозрасчетный - [`РасчетыСПоставщиками`, `РасчетыСПокупателями`, `РасчетыСПерсоналомПоОплатеТруда`, `РасчетыСПодотчетнымиЛицами`]
//      * СубконтоКредит - СправочникСсылка.Кассы
//      * СубконтоДебет - СправочникСсылка.Контрагенты, СправочникСсылка.Сотрудники
//      * СодержаниеОперации - Строка
//      * Сумма - Число
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись.Хозрасчетный - Заполненная запись
Функция ДобавитьЗаписьРасходаДенегИзКассы(Знач дата, Знач аналитикаПроводки) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = аналитикаПроводки.СчетДебета;
    новаяЗапись.СчетКт = ПланыСчетов.Хозрасчетный.Касса;
    новаяЗапись.Сумма = аналитикаПроводки.Сумма;
    новаяЗапись.Содержание = аналитикаПроводки.СодержаниеОперации;

    // Заполнение субконто дебета
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетДт, новаяЗапись.СубконтоДт, аналитикаПроводки.СубконтоДебет);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    // Заполнение субконто кредита
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетКт, новаяЗапись.СубконтоКт, аналитикаПроводки.СубконтоКредит);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

// Добавляет новую запись в регистр бухгалтерии `Хозрасчетный` для отражения начислений сотруднику
//  * Счет дебета: `ПланыСчетов.Хозрасчетный.РасходыНаПродажу` (44)
//  * Счет кредита: `ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда` (70)
// Параметры:
//  дата - Дата
//  структураНачисления - Структура, ФиксированнаяСтруктура
//      * Сотрудник - СправочникСсылка.Контрагенты
//      * СтатьяЗатрат - СправочникСсылка.СтатьиЗатрат
//      * СодержаниеОперации - Строка
//      * Сумма - Число
// Возвращаемое значение:
//  - РегистрБухгалтерииЗапись.Хозрасчетный - Заполненная запись
Функция ДобавитьЗаписьРасчетаСПерсоналом(Знач дата, Знач структураНачисления) Экспорт
    новаяЗапись = ЭтотОбъект.Добавить();
    новаяЗапись.Период = дата;
    новаяЗапись.СчетДт = ПланыСчетов.Хозрасчетный.РасходыНаПродажу;
    новаяЗапись.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
    новаяЗапись.Сумма = структураНачисления.Сумма;
    новаяЗапись.Содержание = структураНачисления.СодержаниеОперации;

    // Заполнение субконто дебета
    субконтоЗаполнен = Ложь;
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетДт, новаяЗапись.СубконтоДт, структураНачисления.СтатьяЗатрат);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    // Заполнение субконто кредита
    субконтоЗаполнен = заполнитьСубконтоПоСчету(новаяЗапись.СчетКт, новаяЗапись.СубконтоКт, структураНачисления.Сотрудник);
    ДиагностикаКлиентСервер.Утверждение(субконтоЗаполнен);

    Возврат новаяЗапись;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#Область ПомощникиПроводок
// Параметры:
//  счет - ПланСчетовСсылка.Хозрасчетный
// Возвращаемое значение:
//  - ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные
Функция получитьВидСубконтоПоСчету(Знач счет)
    видыСубконто = счет.ВидыСубконто;

    Если видыСубконто.Количество() = 0 Тогда
        Возврат Неопределено;
    КонецЕсли;

    Возврат видыСубконто[0].ВидСубконто;
КонецФункции

// Параметры:
//  счет - ПланСчетовСсылка.Хозрасчетный
//  субконто - РегистрБухгалтерииСубконто
//  значение - СправочникСсылка
// Возвращаемое значение:
//  - Булево
Функция заполнитьСубконтоПоСчету(Знач счет, Знач субконто, Знач значение) Экспорт
    видСубконто = получитьВидСубконтоПоСчету(счет);
    Если видСубконто = Неопределено Тогда
        Возврат Ложь;
    КонецЕсли;

    субконто[видСубконто] = значение;
    Возврат Истина;
КонецФункции
#КонецОбласти // ПомощникиПроводок

#КонецОбласти // СлужебныеПроцедурыИФункции
