#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(_, __, ___)
    Если ЗначениеЗаполнено(ЭтотОбъект.АвторДокумента) = Ложь Тогда
        ЭтотОбъект.АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
    КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(отказ, __)
    Если ЭтотОбъект.Товары.Количество() = 0 И ЭтотОбъект.Услуги.Количество() = 0 Тогда
        сообщение = Новый СообщениеПользователю;
        сообщение.Текст = "Документ должен содержать не менее одной записи номенклатуры товаров или услуг.";
        сообщение.Сообщить();

        отказ = Истина;
    КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(_, __)
    выполнитьВсеДвиженияДокумента();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

#Область Движения
Процедура выполнитьВсеДвиженияДокумента()
    Движения.ТоварыНаСкладах.Записывать = Истина;
    Движения.УчетЗатрат.Записывать = Истина;
    Движения.Хозрасчетный.Записывать = Истина;

    выполнитьВсеДвиженияТоваровДокумента();
    выполнитьВсеДвиженияУслугДокумента();
КонецПроцедуры

Процедура выполнитьВсеДвиженияТоваровДокумента()
    отражатьСрокиГодности = получитьУчетнуюПолитику() = Перечисления.СпособыСписанияЗапасов.FEFO;
    выборкаТоварыДокумента = Документы.ПоступлениеТоваровИУслуг.ПолучитьТоварыДокумента(ЭтотОбъект.Ссылка, отражатьСрокиГодности);
    Если выборкаТоварыДокумента = Неопределено Тогда
        ДиагностикаКлиентСервер.Утверждение(ЭтотОбъект.Товары.Количество() = 0,
                "Ожидается что ТЧ Товары должна быть пустой.");
        Возврат;
    КонецЕсли;

    Пока выборкаТоварыДокумента.Следующий() Цикл
        выполнитьДвижениеТоварыНаСкладахПриход(выборкаТоварыДокумента, отражатьСрокиГодности);
        РегистрыБухгалтерии.Хозрасчетный.ДобавитьЗаписьПоступлениеТМЦ(
            ЭтотОбъект.Дата, ЭтотОбъект.Движения.Хозрасчетный, выборкаТоварыДокумента, ЭтотОбъект.Контрагент);
    КонецЦикла;
КонецПроцедуры

Процедура выполнитьВсеДвиженияУслугДокумента()
    таблицаУслуг = Документы.ПоступлениеТоваровИУслуг.ПолучитьУслугиДокумента(
            ЭтотОбъект.Ссылка, Истина);

    Для Каждого строкаУслуг Из таблицаУслуг Цикл
        РегистрыБухгалтерии.Хозрасчетный.ДобавитьЗаписьПоступлениеУслуг(
            ЭтотОбъект.Дата, ЭтотОбъект.Движения.Хозрасчетный, строкаУслуг, ЭтотОбъект.Контрагент);
    КонецЦикла;

    таблицаУслуг.Свернуть("СтатьяЗатрат", "Сумма");
    таблицаСтатьиЗатрат = таблицаУслуг;
    Для Каждого строкаЗатрат Из таблицаСтатьиЗатрат Цикл
        выполнитьДвижениеУчетЗатратОборот(строкаЗатрат);
    КонецЦикла;
КонецПроцедуры

Процедура выполнитьДвижениеТоварыНаСкладахПриход(Знач текСтрокаНоменклатуры, Знач отражатьСрокиГодности = Ложь)
    движение = Движения.ТоварыНаСкладах.Добавить();
    движение.ВидДвижения = ВидДвиженияНакопления.Приход;
    движение.Период = ЭтотОбъект.Дата;
    движение.Номенклатура = текСтрокаНоменклатуры.Номенклатура;
    движение.Склад = ЭтотОбъект.Склад;
    движение.Количество = текСтрокаНоменклатуры.Количество;
    движение.Сумма = текСтрокаНоменклатуры.Сумма;
    Если отражатьСрокиГодности Тогда
        движение.СрокГодности = текСтрокаНоменклатуры.СрокГодности;
    КонецЕсли;
КонецПроцедуры

Процедура выполнитьДвижениеУчетЗатратОборот(Знач строкаЗатрат)
    движение = Движения.УчетЗатрат.Добавить();
    движение.Период = ЭтотОбъект.Дата;
    движение.СтатьяЗатрат = строкаЗатрат.СтатьяЗатрат;
    движение.Сумма = строкаЗатрат.Сумма;

    ДиагностикаКлиентСервер.Утверждение(движение.Сумма <> Неопределено И движение.СтатьяЗатрат <> Неопределено,
        "Значения строки ""УчетЗатрат"" не заполнены.");
КонецПроцедуры
#КонецОбласти // Движения

Функция получитьУчетнуюПолитику()
    Возврат РегистрыСведений.УчетнаяПолитика.ПолучитьТекущийСпособСписанияЗапасов(ЭтотОбъект.Дата);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
