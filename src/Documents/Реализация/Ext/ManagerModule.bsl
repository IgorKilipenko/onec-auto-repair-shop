#Область ПрограммныйИнтерфейс

Процедура Печать(ТабДок, Ссылка) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.Реализация.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реализация.Автомобиль,
	|	Реализация.АвторДокумента,
	|	Реализация.Дата,
	|	Реализация.ДокументОснование,
	|	Реализация.Контрагент,
	|	Реализация.Номер,
	|	Реализация.Склад,
	|	Реализация.Сотрудник,
	|	Реализация.СуммаДокумента,
	|	Реализация.Товары.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма
	|	),
	|	Реализация.Услуги.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма
	|	),
	|	Реализация.МатериалыЗаказчика.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		СостояниеМатериала,
	|		Использован
	|	)
	|ИЗ
	|	Документ.Реализация КАК Реализация
	|ГДЕ
	|	Реализация.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка");
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");
	ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	ОбластьМатериалыЗаказчикаШапка = Макет.ПолучитьОбласть("МатериалыЗаказчикаШапка");
	ОбластьМатериалыЗаказчика = Макет.ПолучитьОбласть("МатериалыЗаказчика");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

        ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

        ВыборкаТовары = Выборка.Товары.Выбрать();
        Если ВыборкаТовары.Количество() > 0 Тогда
            ТабДок.Вывести(ОбластьТоварыШапка);

            Пока ВыборкаТовары.Следующий() Цикл
                ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
                ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
            КонецЦикла;
        КонецЕсли;

        ВыборкаУслуги = Выборка.Услуги.Выбрать();
        Если ВыборкаУслуги.Количество() > 0 Тогда
            ТабДок.Вывести(ОбластьУслугиШапка);

            Пока ВыборкаУслуги.Следующий() Цикл
                ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
                ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
            КонецЦикла;
        КонецЕсли;

        ВыборкаМатериалыЗаказчика = Выборка.МатериалыЗаказчика.Выбрать();
        Если ВыборкаМатериалыЗаказчика.Количество() > 0 Тогда
            ТабДок.Вывести(ОбластьМатериалыЗаказчикаШапка);

            Пока ВыборкаМатериалыЗаказчика.Следующий() Цикл
                ОбластьМатериалыЗаказчика.Параметры.Заполнить(ВыборкаМатериалыЗаказчика);
                ТабДок.Вывести(ОбластьМатериалыЗаказчика, ВыборкаМатериалыЗаказчика.Уровень());
            КонецЦикла;
        КонецЕсли;

		Подвал.Параметры.Заполнить(Выборка);
        Подвал.Параметры.Заполнить(Новый Структура("СуммаДокументаПрописью",
        ЧислоПрописью(Выборка.СуммаДокумента, "Л = ru_RU; ДП = Истина", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2")));
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры

// Возвращает выборку товаров документа сгруппированных по Номенклатуре
//  и сроку годности если аргумент: отражатьСрокиГодности = Истина
// Параметры:
//  документСсылка - ДокументСсылка.Реализация
//  отражатьСрокиГодности - Булево - Если Истина тогда будет выполнена группировка по срокам годности
//  выгрузить - Булево
// Возвращаемое значение:
//  - ВыборкаИзРезультатаЗапроса, ТаблицаЗначений
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Количество - Число
//      * Сумма - Число - Общая стоимость позиции
//      * СрокГодности - Дата, Неопределено - [Опциональное] в случае если отражатьСрокиГодности = Ложь - поле отсутствует в выборке
//  - Неопределено
Функция ПолучитьТоварыДокумента(Знач документСсылка, Знач отражатьСрокиГодности, Знач выгрузить = Истина) Экспорт
    запросТовары = Новый Запрос;
    запросТовары.УстановитьПараметр("Ссылка", документСсылка);

    запросТовары.Текст =
        "ВЫБРАТЬ
        |	РеализацияТовары.Номенклатура КАК Номенклатура,
        |	СУММА(РеализацияТовары.Количество) КАК Количество,
        |   РеализацияТовары.СрокГодности КАК СрокГодности,
        |	СУММА(РеализацияТовары.Сумма) КАК Сумма
        |ИЗ
        |	Документ.Реализация.Товары КАК РеализацияТовары
        |ГДЕ
        |	РеализацияТовары.Ссылка = &Ссылка
        |
        |СГРУППИРОВАТЬ ПО
        |	РеализацияТовары.Номенклатура,
        |	РеализацияТовары.СрокГодности
        |";

    Если НЕ отражатьСрокиГодности Тогда // Удаляем поле СрокГодности из запроса
        запросТовары.Текст = СтрЗаменить(запросТовары.Текст,
                "РеализацияТовары.СрокГодности КАК СрокГодности,", "");
        запросТовары.Текст = СтрЗаменить(запросТовары.Текст, "РеализацияТовары.Номенклатура,",
                "РеализацияТовары.Номенклатура");
        запросТовары.Текст = СтрЗаменить(запросТовары.Текст, "РеализацияТовары.СрокГодности", "");
    КонецЕсли;

    результатЗапроса = запросТовары.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    Если выгрузить = Истина Тогда
        Возврат результатЗапроса.Выгрузить();
    Иначе
        Возврат результатЗапроса.Выбрать();
    КонецЕсли;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
