#Область ПрограммныйИнтерфейс

// Параметры:
//  номенклатураСсылка - СправочникСсылка.Номенклатура
//  период - Дата, МоментВремени, Граница, Неопределено
//  видЦены - ПеречислениеСсылка.ВидыЦенПродажи, Неопределено
//  выгрузить - Булево
// Возвращаемое значение:
//  - ТаблицаЗначений из
//      * Период - Дата
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * ВидЦены - ПеречислениеСсылка.ВидыЦенПродажи
//      * Сумма - Число
//  - ВыборкаИзРезультатаЗапроса
//  - Неопределено
Функция ПолучитьСрезЦенНоменклатуры(Знач номенклатураСсылка, Знач период = Неопределено,
        Знач видЦены = Неопределено, выгрузить = Истина) Экспорт

    запрос = Новый Запрос;
    запрос.Текст =
        "ВЫБРАТЬ
        |	ЦеныНоменклатурыСрезПоследних.Период КАК Период,
        |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
        |	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
        |	ЦеныНоменклатурыСрезПоследних.Сумма КАК Сумма
        |ИЗ
        |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Условие_ВТ) КАК ЦеныНоменклатурыСрезПоследних
        |";

    запрос.УстановитьПараметр("Номенклатура", номенклатураСсылка);
    условиеВТ = "&Период, Номенклатура = &Номенклатура И ВидЦены = &ВидЦены";
    Если период = Неопределено Тогда
        условиеВТ = СтрЗаменить(условиеВТ, "&Период, ", "");
    Иначе
        запрос.УстановитьПараметр("Период", период);
    КонецЕсли;
    Если видЦены = Неопределено Тогда
        условиеВТ = СтрЗаменить(условиеВТ, " И ВидЦены = &ВидЦены", "");
    Иначе
        запрос.УстановитьПараметр("ВидЦены", видЦены);
    КонецЕсли;

    запрос.Текст = СтрЗаменить(запрос.Текст, "&Условие_ВТ", условиеВТ);

    результатЗапроса = запрос.Выполнить();
    Если результатЗапроса.Пустой() Тогда
        Возврат Неопределено;
    КонецЕсли;

    Если выгрузить = Истина Тогда
        Возврат результатЗапроса.Выгрузить();
    Иначе
        Возврат результатЗапроса.Выбрать();
    КонецЕсли;
КонецФункции

// Параметры:
//  номенклатураСсылка - СправочникСсылка.Номенклатура
//  период - Дата, МоментВремени, Граница, Неопределено
//  видЦены - ПеречислениеСсылка.ВидыЦенПродажи, Неопределено - Значение по умолчанию - Розничная
// Возвращаемое значение:
//  - Число - Цена номенклатуры
//  - Неопределено - Если значение удовлетворяющее указанным параметрам не найдено в регистре
Функция ПолучитьЦенуНоменклатуры(Знач номенклатураСсылка, Знач период = Неопределено, Знач видЦены = Неопределено) Экспорт
    // Установка значения по умолчанию
    видЦены = ?(видЦены = Неопределено, Перечисления.ВидыЦенПродажи.Розничная, видЦены);

    ценыНоменклатуры = ПолучитьСрезЦенНоменклатуры(номенклатураСсылка, период, видЦены, Истина);
    Если ценыНоменклатуры = Неопределено Тогда
        Возврат Неопределено;
    КонецЕсли;

    ДиагностикаКлиентСервер.Утверждение(ценыНоменклатуры.Количество() = 1,
            СтрШаблон(
                "По условиям запроса количество цен номенклатуры должно быть строго равно 1.
                |Фактическое количество найденных строк = ""%1"".", ценыНоменклатуры.Количество()));

    Возврат ценыНоменклатуры[0].Сумма;
КонецФункции

// Добавляет новые записи в регистр из таблицы источника.
// Параметры:
//  дата - Дата
//  таблицаЦенНоменклатуры - ТаблицаЗначений
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * Цена - Число
//  видЦены - ПеречислениеСсылка.ВидыЦенПродажи
Процедура ЗаполнитьИзТаблицы(Знач дата, Знач таблицаЦенНоменклатуры, Знач видЦены) Экспорт
    ДиагностикаКлиентСервер.Утверждение(ТипЗнч(таблицаЦенНоменклатуры) = Тип("ТаблицаЗначений"),
            СтрШаблон("Тип документа: ""%1"" не соответствует ожидаемому: ""%2"".",
                ТипЗнч(таблицаЦенНоменклатуры), Тип("ТаблицаЗначений")));
    ДиагностикаКлиентСервер.Утверждение(таблицаЦенНоменклатуры.Колонки.Найти("Номенклатура") <> Неопределено
        И таблицаЦенНоменклатуры.Колонки.Найти("Цена") <> Неопределено,
        "Таблица цен должна содержать колонки: ""Номенклатура"", ""Цена"".");

    Если таблицаЦенНоменклатуры.Количество() = 0 Тогда
        Возврат;
    КонецЕсли;

    записиЦен = СоздатьНаборЗаписей();
    Для каждого строкаЦен Из таблицаЦенНоменклатуры Цикл
        новаяЗапись =  записиЦен.Добавить();
        новаяЗапись.Период = дата;
        новаяЗапись.Номенклатура = строкаЦен.Номенклатура;
        новаяЗапись.ВидЦены = видЦены;
        новаяЗапись.Сумма = строкаЦен.Цена;
    КонецЦикла;

    записиЦен.Записывать = Истина;
    записиЦен.Записать(Ложь);
КонецПроцедуры

#КонецОбласти // ПрограммныйИнтерфейс
